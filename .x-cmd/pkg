
pkg(){
    local op="$1";  shift
    case "$op" in
        *)             "pkg_$op" "$@" ;;
    esac
}


pkg_ls()(
    cd $(x wsroot)/src
    find . -name '*.json'
)

pkg_json2yml()(
    cd $(x wsroot)/src
    find . -name '*.json' | while read -r line; do
        p=${line%.json}.yml
        cat $line | x yq -o yaml e -P >$p
        rm "$line"
    done
)

pkg_yml2tgz()(
    pkg_yml2json
    cd $(x wsroot)/.tmp
    x z env.7z *
    mv env.7z ../dist/env.7z
    cd  $(x wsroot) && x rmrf .tmp
)

pkg_yml2json()(
    local tgtprefix="$(x wsroot)/.tmp"
    mkdir -p "$tgtprefix"
    cd $(x wsroot)/src

    for dir in *; do
        (
            cd "$dir" || continue
            for pkg in *; do
                (
                    cd "$pkg" || exit
                    if [ ! -f meta.yml ]; then
                        printf "%s\n" "Not Existed: $dir/$pkg/meta.yml"
                        exit
                    fi

                    mkdir -p "$tgtprefix/$dir/$pkg"
                    x yq -o json e -P <meta.yml | x ja t "\t" >"$tgtprefix/$dir/$pkg/meta.tt.json"


                    if [ -f version.sh ]; then
                        (
                            . ./version.sh | x ja t "\t"
                        ) >"$tgtprefix/$dir/$pkg/version.tt.json"
                    elif [ -f version.yml ]; then
                        echo "Generate: $tgtprefix/$dir/$pkg/version.tt.json" >&2
                        x yq -o json e -P <version.yml | x ja t "\t" >"$tgtprefix/$dir/$pkg/version.tt.json"
                    else
                        echo "Unexisted version.sh and version.yml: $tgtprefix/$dir/$pkg" >&2
                    fi
                )
            done
        )
    done

    # find . -name '*.yml' | while read -r line; do
    #     pp="$tgtprefix/$line"
    #     ppd="${pp%/*}"
    #     [ -d "$ppd" ] || mkdir -p "$ppd"
    #     {
    #         cat "$line" | x yq -o json e -P | x ja t "\t"
    #         printf "\n"
    #     } >"${pp%.yml}.tt.json"
    # done
)

pkg_install(){
    pkg_yml2json
    x rmrf "$___X_CMD_ROOT_TMP/env/raw"
    mkdir -p "$___X_CMD_ROOT_TMP/env"
    cp -rf "$(x wsroot)/.tmp" "$___X_CMD_ROOT_TMP/env/raw"
}

[ "$#" -gt 0 ] && pkg "$@"

