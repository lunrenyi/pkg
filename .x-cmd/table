# shellcheck shell=sh disable=SC2154,SC2164,2046,2106,3043 #source
generate_mdtable_net()(
    x:info "Generate: markdown table"
    printf "%s\n" "| candidate \\ osarch | linux/x64 | linux/arm64 | darwin/x64 | darwin/arm64 | win/x64 | 备注 |"
    printf "%s\n" "| ------------------ | ----------- | ------------ | ---------- | --------- | ------- | ---- |"

    cd $(x wsroot)/src

    for dir in *; do
        case $dir in
            sdkman) continue;;
        esac
    (
        cd "$dir" || continue

        for pkg in *; do
            (
                echo $pkg >&2
                version="$(___x_cmd_pkg_default_version $pkg)"
                printf "|%s " "$pkg"
                while read -r osarch; do
                    url="$(___x_cmd_pkg___list "$pkg" "$version" "$osarch" "url.internet" 2>/dev/null)"
                    if [ -z $url ]; then
                        printf "| %s " "-"
                        continue
                    fi
                     return_code="$(curl -sSI -o /dev/null -w "%{http_code}" "$url" )"

                    if [ "$return_code" = "200" ] || [ "$return_code" = "302" ];then
                        printf "| %s " "✅"

                    else
                        printf "| %s(%s)" "❌" "$return_code"
                    fi


                done <<A
linux/x64
linux/arm64
darwin/x64
darwin/arm64
win/x64
A
     echo "|"
            )
        done

    )
done
) > $(x wsroot)/.x-cmd/dev/README.md

generate_mdtable_local()(
    x:info "Generate: markdown table"
    printf "%s\n" "| candidate \\ osarch | linux/arm64 | darwin/arm64 | darwin/x64 | linux/x64 | win/x64 | 备注 |"
    printf "%s\n" "| ------------------ | ----------- | ------------ | ---------- | --------- | ------- | ---- |"
    cd "$(x wsroot)/.tmp" || return
    find . -name meta.tt.json | while read -r line; do

    pkg_name="${line%/meta.tt.json}"
    pkg_name="${pkg_name##*/}"
        cat "$line" | x ja -v NAME="$pkg_name"  '
        BEGIN{
            linux_x64 = "x"; linux_arm64 = "x";  darwin_arm64 = "x"; darwin_x64 = "x"; win_x64 = "x"
        }
        {
            if ((O[1]=="\"rule\"") && (v() !~ /^[\{}]$/) && aa(NAME)) {
                if(juq(K) ~ "*/linux/x64") linux_x64 = "ok"
                if(juq(K) ~ "*/linux/arm64")  linux_arm64 = "ok"
                if(juq(K) ~ "*/darwin/arm64")  darwin_arm64 = "ok"
                if(juq(K) ~ "*/darwin/x64")  darwin_x64 = "ok"
                if(juq(K) ~ "*/win/x64")  win_x64 = "ok"
            }
        }
        END{

            print "| " NAME  " | " linux_x64 " | "  linux_arm64 " | "  darwin_arm64 " | "  darwin_x64  " |  " win_x64 " |  "  "  |"
        }
        function aa(name){
            if(name ~ "^node$|^scala$|^go$|^lua$|^java$"){
                linux_x64 = "ok"; linux_arm64 = "ok";  darwin_arm64 = "ok"; darwin_x64 = "ok"; win_x64 = "ok"
                return false
            }else return true
        }

        '

done
) >  $(x wsroot)/.x-cmd/dev/README.md


table(){
    local op="$1";  shift
    case "$op" in
        *)             "generate_mdtable_$op" ;;
    esac
}
[ "$#" -gt 0 ] && table "$@"