# shellcheck shell=sh disable=SC2154,SC2164,2046,2106,3043 #source

generate_xbin_list()(
    x:info "Generate binmod.txt file"
    cd "$___X_CMD_ROOT_DATA/pkg/raw/" || return
    find . -name meta.tt.json | while read -r line; do
        pkg_name="${line%/meta.tt.json}"
        category="${pkg_name%/*}"
        category="${category##*/}"
        pkg_name="${pkg_name##*/}"
        < "$line" x ja -v NAME="$pkg_name" -v category="$category" '{
            if (k()=="static-build") {
                _idx = index(v(), "/")
                NAME=substr(v(), _idx+1)
            }
            if ((O[1]=="\"xbin\"") && (v() !~ /^[\{}]$/)) {
                _name = ( D == 1 ) ? NAME : k()
                if(uq[ _name ] == "") {
                    print category " " NAME " " _name
                    uq[ _name ] = _name
                }
            }
        }
        '
    done
)

generate_mdtable(){
    printf "%s\n" "| candidate \\ osarch | $osarch |"
    printf "%s\n" "| ------------------ | ----------- |"

    generate_xbin_list | while read -r category candiate xbin; do
        printf "| %s/%s/%s " "$category" "$candiate" "$xbin"

        echo >&2
        x:info "========= $xbin =============="

        if x pkg xbin init "$xbin" >/dev/null && [ -n "$(x pkg xbin path "$xbin")" ] ; then
            printf "| %s " "✅"
            bin_dir="$(x pkg xbin path "$xbin")"
            bin_dir="${bin_dir%/*}"
            x:info "$xbin -> $bin_dir"
            x:info "bin_list -> $(generate_bin_list "$bin_dir")"
        else
            printf "| %s |" "❌"
        fi

        printf "|\n"
    done
}

generate_bin_list(){
    find "$1" -type f | while read -r bin_path; do
        if [ -x "$bin_path" ]; then
            printf "%s, " "${bin_path##*/}"
        fi
    done
}

local network="${1:-"cn"}"
local osarch; osarch="$(x os name)$(x os arch)"
local result_path; result_path="$(x wsroot)/doc/xbin/$(x os name).$(x os arch).$network.md"
x touch "$result_path"

x:info "Generate => markdown table for $network network, osarch => $osarch"
(
    generate_mdtable "$network" >"$result_path"
)
