name: Build and test x-cmd/pkg

on:
  # 设置每天定时触发三次工作流程，分别是0点、8点和16点
  schedule:
    - cron: '0 0 * * *'
    - cron: '0 8 * * *'
    - cron: '0 16 * * *'
  # 设置手动触发，可以在GitHub网站上点击Run workflow按钮来启动工作流程。
  workflow_dispatch:

# 设置工作流程中的任务
jobs:
  # 定义一个名为build-and-test的任务
  build-and-test:
    # 设置任务的策略，可以控制任务的并行执行和失败处理。
    strategy:
      # 设置任务的矩阵，可以用于生成多个子任务，每个子任务使用不同的变量值。
      matrix:
        # 设置一个名为os的变量，它有两个值：ubuntu-latest和macos-latest。这意味着会生成两个子任务，分别在ubuntu和macos环境下运行。
        os: [ ubuntu-latest ]
    # 设置任务运行的环境为矩阵中的os变量值，即ubuntu或macos。
    runs-on: ${{ matrix.os }}
    # 设置任务的环境变量
    env:
      # 指定环境变量，这里是企业微信机器人的webhook地址
      WEBHOOK_URL: https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=4f3030b2-f2dc-4f67-b73f-b0994ba0240e
      # 设置一个名为GITHUB_TOKEN的变量，值为仓库中的一个密钥，用于访问GitHub API。
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # 设置一个名为ssh_key的变量，值为仓库中的一个密钥，用于SSH连接。
      ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
      # 设置一个名为git_user的变量，值为lunrenyi，用于Git操作的用户名。
      git_user: lunrenyi
      # 设置一个名为git_email的变量，值为lxb2863854515@163.com，用于Git操作的邮箱。
      git_email: lxb2863854515@163.com
      # 设置一个名为CONCURRENCY的变量，值为10，用于控制并发数。
      CONCURRENCY: 5
    # 定义步骤
    steps:
      - name: Send result to WeChat group
        uses: x-cmd/action@main
        # 调用curl命令发送消息到webhook地址，这里假设消息类型是文本
        run: |
          x qywx webhook $WEBHOOK_URL
          x qywx send text "hello world!"

  # build:
  #   needs: build-and-test
  #   uses: lunrenyi/pkg/.github/workflows/build.yml@main

  # test-xbin:
  #   needs: build
  #   uses: lunrenyi/pkg/.github/workflows/test-xbin.yml@main

  # test-default:
  #   needs: test-xbin
  #   uses: lunrenyi/pkg/.github/workflows/test-default-url.yml@main

