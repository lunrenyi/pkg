name: Build and test x-cmd/pkg

on:
  # 设置每天定时触发三次工作流程，分别是0点、8点和16点
  schedule:
    - cron: '0 0 * * *'
    - cron: '0 8 * * *'
    - cron: '0 16 * * *'
  # 设置手动触发，可以在GitHub网站上点击Run workflow按钮来启动工作流程。
  workflow_dispatch:

# 设置工作流程中的任务
jobs:
  # 定义一个名为build-and-test的任务
  build-and-test:
    # 设置任务的策略，可以控制任务的并行执行和失败处理。
    strategy:
      # 设置任务的矩阵，可以用于生成多个子任务，每个子任务使用不同的变量值。
      matrix:
        # 设置一个名为os的变量，它有两个值：ubuntu-latest和macos-latest。这意味着会生成两个子任务，分别在ubuntu和macos环境下运行。
        os: [ ubuntu-latest ]
    # 设置任务运行的环境为矩阵中的os变量值，即ubuntu或macos。
    runs-on: ${{ matrix.os }}
    # 设置任务的超时时间为100分钟，如果超过这个时间，任务会被取消。
    timeout-minutes: 100
    # 设置任务的环境变量
    env:

      # 设置一个名为CONCURRENCY的变量，值为10，用于控制并发数。
      CONCURRENCY: 5
    # 定义步骤
    steps:
      - name: main
        uses: actions/checkout@v2
      # 第一步：构建x-cmd/pkg的all包
      - name: Build x-cmd/pkg all
        uses: ./.github/workflows/build.yml
      # # 第二步：测试xbin
      # - name: Test xbin
      #   continue-on-error: true
      #   uses: ./.github/workflows/test-xbin.yml
      #   with:
      #     # 可以传递一些输入参数，例如要构建的包名
      #     package: x-cmd/pkg
      # # 第三步：测试default
      # - name: Test default
      #   continue-on-error: true
      #   uses: ./.github/workflows/test-default-url.yml
      #   with:
      #     # 可以传递一些输入参数，例如要构建的包名
      #     package: x-cmd/pkg
      # # 第五步：使用企业微信机器人发送测试结果到微信群上
